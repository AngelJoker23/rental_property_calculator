class RentalPropertyCalculator:
    """
    A class to represent a rental property calculator.

    This calculator helps calculate the Return on Investment (ROI) for a rental property.
    It takes into account various categories and sub-categories to provide a comprehensive analysis.

    Attributes:
    - purchase_price (float): The purchase price of the rental property.
    - rehab_cost (float): The cost of rehabilitating or renovating the property.
    - monthly_rent (float): The monthly rental income generated by the property.
    - operating_expenses (float): The total operating expenses for the property.
    - holding_period (int): The holding period in years for the investment.
    """

    def __init__(
        self,
        purchase_price: float,
        rehab_cost: float,
        monthly_rent: float,
        operating_expenses: float,
        holding_period: int,
    ):
        """
        Constructs a new RentalPropertyCalculator instance.

        Parameters:
        - purchase_price (float): The purchase price of the rental property.
        - rehab_cost (float): The cost of rehabilitating or renovating the property.
        - monthly_rent (float): The monthly rental income generated by the property.
        - operating_expenses (float): The total operating expenses for the property.
        - holding_period (int): The holding period in years for the investment.

        Raises:
        - ValueError: If any of the input parameters are negative or zero.
        """

        # Validating input parameters
        if (
            purchase_price <= 0
            or rehab_cost < 0
            or monthly_rent <= 0
            or operating_expenses < 0
            or holding_period <= 0
        ):
            raise ValueError(
                "Invalid input parameters. Please provide positive values for all parameters."
            )

        # Assigning the input parameters to the instance variables.
        self.purchase_price = purchase_price
        self.rehab_cost = rehab_cost
        self.monthly_rent = monthly_rent
        self.operating_expenses = operating_expenses
        self.holding_period = holding_period

    def calculate_roi(self):
        """
        Calculates the Return on Investment (ROI) for the rental property.

        The ROI is calculated using the formula:
        ROI = (Total Profit / Total Investment) * 100

        Returns:
        float: The ROI percentage for the rental property.

        Raises:
        - ValueError: If the holding period is less than 1 year.
        """

        # Validating the holding period
        if self.holding_period < 1:
            raise ValueError("Holding period should be at least 1 year.")

        # Calculating the total investment
        total_investment = self.purchase_price + self.rehab_cost

        # Calculating the total profit
        total_profit = (self.monthly_rent * 12 * self.holding_period) - (
            self.operating_expenses * self.holding_period
        )

        # Calculating the ROI percentage
        roi = (total_profit / total_investment) * 100

        # Returning the ROI value
        return roi


def get_user_input_and_calculate_roi():
    # Getting user input
    purchase_price = float(input("Enter the purchase price of the rental property: "))
    rehab_cost = float(
        input("Enter the cost of rehabilitating or renovating the property: ")
    )
    monthly_rent = float(
        input("Enter the monthly rental income generated by the property: ")
    )
    operating_expenses = float(
        input("Enter the total operating expenses for the property: ")
    )
    holding_period = int(
        input("Enter the holding period in years for the investment: ")
    )

    # Creating a rental property calculator instance
    calculator = RentalPropertyCalculator(
        purchase_price, rehab_cost, monthly_rent, operating_expenses, holding_period
    )

    # Calculating the ROI for the rental property
    roi = calculator.calculate_roi()

    # Printing the calculated ROI
    print(f"The ROI for the rental property is {roi}%.")


# Call the function to get user input and calculate ROI
get_user_input_and_calculate_roi()
